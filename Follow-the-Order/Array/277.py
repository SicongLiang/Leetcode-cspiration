# 277. 搜寻名人(Medium)
##########################
##########################
第一次刷，不会
##########################
题解：
class Solution:
    def findCelebrity(self, n):
        """
        :type n: int
        :rtype: int
        """
        # 我们先初始化候选人为第一个人        
        candidate = 0

        # 观察图可知，每个节点，最多只有一个箭头
        # 另一个规律是，假如说有一个名人，那么所有的箭头都指向他
        # 所以，假如说真有一个名人，那么我们任意找到一个箭头的指向，都会指向那个名人
        for i in range(1, n):
            # 如果他认识别人，将候选人替换为他认识的人
            if knows(candidate, i): 
                candidate = i
            
        # 判断 candidate 是否符合条件1, 2
        for i in range(n):
            # 名人只认识自己，跳过
            if candidate == i:
                continue
            # 条件1：假如发现名人还认识别人，说明它不是名人
            if knows(candidate, i):
                return -1
            # 条件2：假如别人不认识名人，说明它不是名人
            if not knows(i, candidate):
                return -1
        
        return candidate
   
* 第一个循环，初始化0，找到“出度”为0的点：第一个for循环是用来找候选名人的，因为每次调用knows(i,j）至少可以排除一个人！！！！
（PS：这才是最关键的，所以只需要 i 从1到n循环一次就能得到“出度”为0的候选人）
假设i认识j，那么i肯定不是名人，否则j肯定不是（如果是名人，那么i肯定会认识他），然后第一次for循环总共调用了n-1次，很明显，每次排除的人都不一样，
因为j是增加的，当排除一个候选的i或者j后，下次肯定不会再次排除这个人，故总共排除了n-1个人，剩下最后一个满足条件的可以作为候选，

* 第二个循环，然后利用这个候选判断其是否符合名人的特性（他不认识其他人，但其他人都认识他）
